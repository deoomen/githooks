#!/bin/bash

no_dev_tools() {
    echo ""
    echo "Please install tools and dev dependencies"
    echo ""
    echo "  make co install-all"
    echo ""
    exit 1
}

# Easy Coding Standard checker
easy_coding_standard() {
    ECS="tools/code-quality/vendor/bin/ecs"
    ECS_RUN_CMD="make co ecs-dry"
    HAS_ECS=false

    if [ -x ${ECS} ]; then
        HAS_ECS=true
    fi

    if ${HAS_ECS}; then
        echo -e "\e[1;33m[ECS]\e[0;32m Dry run started...\e[0m"
        ${ECS_RUN_CMD}

        if [[ $? -ne 0 ]]; then
            echo -e "\e[1;33m[ECS]\e[0;31m Dry run failed! Please fix your files."
            exit 1
        fi

        echo -e "\e[1;33m[ECS]\e[0;32m Dry run successful."
    else
        no_dev_tools
    fi
}

# PHPStan checker
phpstan() {
    PHPSTAN="tools/code-quality/vendor/bin/phpstan"
    PHPSTAN_RUN_CMD="make co stan-check"
    HAS_PHPSTAN=false

    if [ -x ${PHPSTAN} ]; then
        HAS_PHPSTAN=true
    fi

    if ${HAS_PHPSTAN}; then
        echo -e "\e[1;33m[PHPStan]\e[0;32m Static analysis started...\e[0m"
        ${PHPSTAN_RUN_CMD} > /dev/null 2>&1

        if [[ $? -ne 0 ]]; then
            cat app/phpstan-report.json
            echo -e "\n\e[1;33m[PHPStan]\e[0;31m Static analysis failed! Please fix your files. PHPStan report location: app/phpstan-report.json"
            exit 1
        fi

        echo -e "\e[1;33m[PHPStan]\e[0;32m Static analysis successful."
    else
        no_dev_tools
    fi
}

are_you_sure() {
    exec < /dev/tty
    read -p "Are you sure to push \"${1}\"? [y\N]: " ANSWER
    exec <&-

    if [ ${ANSWER:-N} != "${ANSWER#[Nn]}" ]; then
        echo "Push aborted."
        exit 1
    fi
}

test_unit() {
    PHPUNIT="app/vendor/bin/phpunit"
    PHPUNIT_UNIT_RUN_CMD="make co test-u"
    HAS_PHPUNIT=false

    if [ -x ${PHPUNIT} ]; then
        HAS_PHPUNIT=true
    fi

    if ${HAS_PHPUNIT}; then
        echo -e "\e[1;33m[PHPUnit][Unit]\e[0;32m Unit tests started...\e[0m"
        ${PHPUNIT_UNIT_RUN_CMD}

        if [[ $? -ne 0 ]]; then
            echo -e "\e[1;33m[PHPUnit][Unit]\e[0;31m Unit tests failed! Please fix your tests.\e[0m"
            exit 1
        fi

        echo -e "\e[1;33m[PHPUnit][Unit]\e[0;32m Unit tests successful.\e[0m"
    else
        no_dev_tools
    fi
}

test_integration() {
    PHPUNIT="app/vendor/bin/phpunit"
    PHPUNIT_UNIT_RUN_CMD="make co test-i"
    HAS_PHPUNIT=false

    if [ -x ${PHPUNIT} ]; then
        HAS_PHPUNIT=true
    fi

    if ${HAS_PHPUNIT}; then
        echo -e "\e[1;33m[PHPUnit][Integration]\e[0;32m Integration tests started...\e[0m"
        ${PHPUNIT_UNIT_RUN_CMD}

        if [[ $? -ne 0 ]]; then
            echo -e "\e[1;33m[PHPUnit][Integration]\e[0;31m Integration tests failed! Please fix your tests.\e[0m"
            exit 1
        fi

        echo -e "\e[1;33m[PHPUnit][Integration]\e[0;32m Integration tests successful.\e[0m"
    else
        no_dev_tools
    fi
}

while read LOCAL_REF LOCAL_SHA REMOTE_REF REMOTE_SHA
do
    if [[ ${REMOTE_REF} == refs/tags/* ]]; then
        # tag push
        are_you_sure ${TAG_REF}
        exit 0
    else
        # normal push
        REMOTE="$1"
        PROTECTED_BRANCHES_REGEX="\/(master|release\/[0-9]+\.[0-9]+)$"

        if echo ${REMOTE_REF} | grep -qE ${PROTECTED_BRANCHES_REGEX} ; then
            are_you_sure ${REMOTE_REF}
        fi

        easy_coding_standard
        phpstan
        test_unit
        test_integration

        exit 0
    fi
done

echo "Unexpected behaviour :("
exit 1
